{"designerVersion":"1.1.7","id":"pbChart","name":"Chart","lastUpdate":1444745078864,"template":"<canvas ng-if=\"!environment\"\n        class=\"chart-base\"\n        chart-type=\"properties.type\"\n        chart-data=\"data\"\n        chart-labels=\"properties.labels\"\n        chart-legend=\"{{ !properties.legendHidden }}\"\n        chart-series=\"properties.setLabels\"\n        chart-colours=\"colors\"\n        chart-options=\"options\">\n</canvas>\n<svg ng-if=\"environment\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 20\">\n    <path d=\"M20.53 20H15v-5.045h5.53V20zm7.21-7.44h-5.584V20h5.584v-7.44zm7.156-3.262h-5.584V20h5.584V9.298zM35 0l-4.525.736.996.946-6.805 6.148-2.472-2.196-6.92 6.48 1.702 1.575 5.147-4.84 2.55 2.27 8.495-7.798.967.918L35 0z\" fill=\"#ccc\"/>\n</svg>\n","icon":"<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 20\"><path d=\"M20.53 20H15v-5.045h5.53V20zm7.21-7.44h-5.584V20h5.584v-7.44zm7.156-3.262h-5.584V20h5.584V9.298zM35 0l-4.525.736.996.946-6.805 6.148-2.472-2.196-6.92 6.48 1.702 1.575 5.147-4.84 2.55 2.27 8.495-7.798.967.918L35 0z\" fill=\"#fff\"/></svg>","controller":"function PbChartCtrl($scope, $log) {\n\n  function isMultiSeriesChart(chartType) {\n    return [\"Line\", \"Bar\", \"Radar\"].indexOf(chartType) > -1;\n  }\n\n  function isFlatArray(array) {\n    return array && array[0] && !Array.isArray(array[0]);\n  }\n\n  $scope.$watch('properties.data', function(value) {\n    if (isMultiSeriesChart($scope.properties.type) && isFlatArray($scope.properties.data)) {\n      $scope.data = [$scope.properties.data];\n    } else {\n      $scope.data = $scope.properties.data;\n    }\n  });\n\n  $scope.$watch('properties.colors', function(value) {\n    $scope.colors = ($scope.properties.colors || []).length > 0 ? $scope.properties.colors : null;\n  });\n\n  $scope.$watch('properties.options', function(value) {\n    if (angular.isString(value)) {\n      try {\n        $scope.options = angular.fromJson(value);\n      } catch (e) {\n        $log.error('Chart widget: Advanced options property should be a valid json object, ex: { \"animateRotate\" : false }');\n      }\n    } else {\n      $scope.options = value;\n    }\n  });\n}\n","description":"Graphical display of numerical data to ease understanding. This widget is based on angular-chart-0.8.1, which is based on Chart.js. For information see http://jtblin.github.io/angular-chart.js/ and http://www.chartjs.org/docs/. Available chart types to display a single set of data are pie, doughnut, and polar area. For multiple sets of data, available chart types are bar, line, and radar.","custom":false,"order":16,"properties":[{"label":"Type","name":"type","help":"A multiple set chart shows one or more set of data","type":"choice","defaultValue":"Doughnut","choiceValues":[{"group":"Single set charts","value":"Doughnut","label":"Doughnut"},{"group":"Single set charts","value":"Pie","label":"Pie"},{"group":"Single set charts","value":"PolarArea","label":"Polar Area"},{"group":"Multiple set charts","value":"Bar","label":"Bar"},{"group":"Multiple set charts","value":"Line","label":"Line"},{"group":"Multiple set charts","value":"Radar","label":"Radar"}],"bond":"constant"},{"label":"Data","name":"data","caption":"Comma-separated list or variable","help":"A variable that contains a JSON array (single set) or JSON array of arrays (multiple sets) where each array is a set. The data can be obtained by a BDM query, API call (default or extension), or JavaScript that retrieves and formats external data","type":"collection","defaultValue":[65,59,80,81,56,55,40],"bond":"expression"},{"label":"Labels","name":"labels","help":"The scale labels for the x-axis for line and bar charts, ray labels for a radar chart, sector labels for single set charts","type":"collection","defaultValue":["January","February","March","April","May","June","July"],"bond":"expression"},{"label":"Set labels","name":"setLabels","caption":"Comma-separated list","showFor":"['Line', 'Bar', 'Radar'].indexOf(properties.type.value) > -1","type":"collection","defaultValue":["Default set label"],"bond":"expression"},{"label":"Legend hidden","name":"legendHidden","help":"The legend shows the sector labels for single set charts, and the set labels for multiple set charts","type":"boolean","defaultValue":true,"bond":"constant"},{"label":"Colors","name":"colors","caption":"For example #FF0000, #0066FF","help":"The hex codes for the sector colors for single set charts, or for the set colors for multiple set charts. If not specified, default colors are used","type":"collection","bond":"expression"},{"label":"Advanced options","name":"options","caption":"See <a href=\"http://www.chartjs.org/docs/\" target=\"_blank\">chart.js</a> for details of the chart options for each type of chart. Specify a JSON structure corresponding to the options you want","type":"text","bond":"expression"}],"assets":[{"name":"angular-chart-0.8.1.css","type":"css","order":0},{"name":"angular-chart-0.8.1.min.js","type":"js","order":2},{"name":"Chart-1.0.2.min.js","type":"js","order":1}],"requiredModules":["chart.js"]}